#ifndef __INCLUDE_NUTTX_LEPTON_RAD_H_
#define __INCLUDE_NUTTX_LEPTON_RAD_H_


#define RAD 0x0E


#define LEPTON_RAD_RBFO_SCALE_SHIFT                 13          // 2^13 = 8192

#define LEPTON_RAD_LUT128_ENTRIES                   128
#define LEPTON_RAD_LUT256_ENTRIES                   256


#define LEPTON_RAD_MODULE_BASE                     0x4E00   // includes the OEM Bit set 0x4000

#define LEPTON_CID_RAD_RBFO_INTERNAL               0x0000   /* High Gain */
#define LEPTON_CID_RAD_RBFO_EXTERNAL               0x0004   /* High Gain */
#define LEPTON_CID_RAD_DEBUG_TEMP                  0x0008
#define LEPTON_CID_RAD_DEBUG_FLUX                  0x000C
#define LEPTON_CID_RAD_ENABLE_STATE                0x0010
#define LEPTON_CID_RAD_GLOBAL_OFFSET               0x0014
#define LEPTON_CID_RAD_TFPA_CTS_MODE               0x0018
#define LEPTON_CID_RAD_TFPA_CTS                    0x001C
#define LEPTON_CID_RAD_TEQ_SHUTTER_LUT             0x0020
#define LEPTON_CID_RAD_TSHUTTER_MODE               0x0024
#define LEPTON_CID_RAD_TSHUTTER                    0x0028
#define LEPTON_CID_RAD_RUN_FFC                     0x002C
#define LEPTON_CID_RAD_RUN_STATUS                  0x0030
#define LEPTON_CID_RAD_RESPONSIVITY_SHIFT          0x0034
#define LEPTON_CID_RAD_F_NUMBER                    0x0038
#define LEPTON_CID_RAD_TAU_LENS                    0x003C
#define LEPTON_CID_RAD_RESPONSIVITY_VALUE_LUT      0x0040
#define LEPTON_CID_RAD_GLOBAL_GAIN                 0x0044
#define LEPTON_CID_RAD_RADIOMETRY_FILTER           0x0048
#define LEPTON_CID_RAD_TFPA_LUT                    0x004C
#define LEPTON_CID_RAD_TAUX_LUT                    0x0050
#define LEPTON_CID_RAD_TAUX_CTS_MODE               0x0054
#define LEPTON_CID_RAD_TAUX_CTS                    0x0058
#define LEPTON_CID_RAD_TEQ_SHUTTER_FLUX            0x005C
#define LEPTON_CID_RAD_MFFC_FLUX                   0x0060
#define LEPTON_CID_RAD_FRAME_MEDIAN_VALUE          0x007C
#define LEPTON_CID_RAD_MLG_LUT                     0x0088
#define LEPTON_CID_RAD_THOUSING_TCP                0x008C
#define LEPTON_CID_RAD_HOUSING_TCP                 0x008C
#define LEPTON_CID_RAD_SHUTTER_TCP                 0x0090
#define LEPTON_CID_RAD_LENS_TCP                    0x0094
#define LEPTON_CID_RAD_PREVIOUS_GLOBAL_OFFSET      0x0098
#define LEPTON_CID_RAD_PREVIOUS_GLOBAL_GAIN        0x009C
#define LEPTON_CID_RAD_GLOBAL_GAIN_FFC             0x00A0
#define LEPTON_CID_RAD_CNF_SCALE_FACTOR            0x00A4
#define LEPTON_CID_RAD_TNF_SCALE_FACTOR            0x00A8
#define LEPTON_CID_RAD_SNF_SCALE_FACTOR            0x00AC
#define LEPTON_CID_RAD_ARBITRARY_OFFSET            0x00B8

#define LEPTON_CID_RAD_FLUX_LINEAR_PARAMS          0x00BC
#define LEPTON_CID_RAD_TLINEAR_ENABLE_STATE        0x00C0
#define LEPTON_CID_RAD_TLINEAR_RESOLUTION          0x00C4
#define LEPTON_CID_RAD_TLINEAR_AUTO_RESOLUTION     0x00C8
#define LEPTON_CID_RAD_SPOTMETER_ROI               0x00CC
#define LEPTON_CID_RAD_SPOTMETER_OBJ_KELVIN        0x00D0

#define LEPTON_CID_RAD_RBFO_INTERNAL_LG            0x00D4   /* Low Gain */
#define LEPTON_CID_RAD_RBFO_EXTERNAL_LG            0x00D8   /* Low Gain */

#define LEPTON_CID_RAD_ARBITRARY_OFFSET_MODE       0x00DC
#define LEPTON_CID_RAD_ARBITRARY_OFFSET_PARAMS     0x00E0

#define LEPTON_CID_RAD_RADIO_CAL_VALUES            0x00E4

/* Radiometry Enable state
*/
typedef enum LEPTON_RAD_ENABLE_E_TAG
{
   LEPTON_RAD_DISABLE = 0,
   LEPTON_RAD_ENABLE,
   LEPTON_END_RAD_ENABLE

}LEPTON_RAD_ENABLE_E, *LEPTON_RAD_ENABLE_E_PTR;
/* Temperature TFpa and TAux counts Update Mode
*/
typedef enum LEPTON_RAD_TEMPERATURE_UPDATE_E_TAG
{
   LEPTON_RAD_NORMAL_UPDATE = 0,
   LEPTON_RAD_NO_UPDATE,         // Fixed to last value
   LEPTON_RAD_UPDATE_END

}LEPTON_RAD_TEMPERATURE_UPDATE_E, *LEPTON_RAD_TEMPERATURE_UPDATE_E_PTR;

/* Run operation status
*/
typedef enum
{
   LEPTON_RAD_STATUS_ERROR = -1,
   LEPTON_RAD_STATUS_READY = 0,
   LEPTON_RAD_STATUS_BUSY,
   LEPTON_RAD_FRAME_AVERAGE_COLLECTING_FRAMES,
   LEPTON_RAD_STATUS_END

} LEPTON_RAD_STATUS_E, *LEPTON_RAD_STATUS_E_PTR;

typedef enum LEPTON_RAD_TLINEAR_RESOLUTION_E_TAG
{
   LEPTON_RAD_RESOLUTION_0_1 = 0,
   LEPTON_RAD_RESOLUTION_0_01,

   LEPTON_RAD_END_RESOLUTION,
} LEPTON_RAD_TLINEAR_RESOLUTION_E, *LEPTON_RAD_TLINEAR_RESOLUTION_E_PTR;

typedef enum LEPTON_RAD_ARBITRARY_OFFSET_MODE_E_TAG
{
   LEPTON_RAD_ARBITRARY_OFFSET_MODE_MANUAL = 0,
   LEPTON_RAD_ARBITRARY_OFFSET_MODE_AUTO,
   LEPTON_RAD_END_ARBITRARY_OFFSET_MODE,

} LEPTON_RAD_ARBITRARY_OFFSET_MODE_E, *LEPTON_RAD_ARBITRARY_OFFSET_MODE_E_PTR;

#endif /*__INCLUDE_NUTTX_LEPTON_RAD_H_*/
